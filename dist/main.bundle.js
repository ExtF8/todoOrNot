"use strict";(self.webpackChunktodoornot=self.webpackChunktodoornot||[]).push([[179],{368:()=>{const e=document.querySelector("body"),t=document.querySelector("#cs-navigation"),o=document.querySelector("#cs-navigation .cs-toggle");!function(){function e(){document.body.classList.add("dark-mode"),localStorage.setItem("theme","dark")}function t(){document.body.classList.remove("dark-mode"),localStorage.setItem("theme","light")}!function(){let o="light";localStorage.getItem("theme")?o=localStorage.getItem("theme"):window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches&&(o="dark"),"dark"===o?e():t()}(),document.getElementById("dark-mode-toggle").addEventListener("click",(()=>{"light"===localStorage.getItem("theme")?e():t()}))}(),function(){o.addEventListener("click",(function(){o.classList.toggle("cs-active"),t.classList.toggle("cs-active"),e.classList.toggle("cs-open"),function(){const e=document.querySelector("#cs-expanded");"false"===e.getAttribute("aria-expanded")?e.setAttribute("aria-expanded","true"):e.setAttribute("aria-expanded","false")}()}));const c=Array.from(document.querySelectorAll("#cs-navigation .cs-dropdown"));for(const e of c){const t=()=>{e.classList.toggle("cs-active")};e.addEventListener("click",t)}}();let c=document.querySelector("#main-container");homePageLoader(c),["home","menu","contacts"].forEach((e=>{const t=document.getElementById(e);t.addEventListener("click",(()=>{"home"==t.id?homePageLoader(c):"menu"==t.id?menuPageLoader(c):contactsPageLoader(c),function(e){const t=document.querySelector("body"),o=document.querySelector("#cs-navigation"),c=document.querySelector("#cs-navigation .cs-toggle");["home","menu","contacts"].forEach((a=>{const n=document.getElementById(a);n&&(a===e?(n.classList.add("cs-active"),c.classList.remove("cs-active"),o.classList.remove("cs-active"),t.classList.remove("cs-open")):n.classList.remove("cs-active"))}))}(e)}))}))}},e=>{e(e.s=368)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,